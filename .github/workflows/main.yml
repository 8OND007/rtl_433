name: Build Static Linux Binary (Alpine Compatible)

on:
  push:
  workflow_dispatch:

jobs:
  build-linux-static:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout rtl_433 repository
      uses: actions/checkout@v4

    - name: Set up Alpine container
      uses: addnab/docker-run-action@v3
      with:
        image: alpine:3.22
        options: -v ${{ github.workspace }}:/work -w /work
        run: |
          # Install build dependencies
          apk add --no-cache \
            build-base \
            cmake \
            git \
            libtool \
            autoconf \
            automake \
            pkgconf

          # Build libusb (static)
          git clone https://github.com/libusb/libusb.git
          cd libusb
          ./autogen.sh
          CFLAGS="-fPIC" ./configure --enable-static --disable-shared --prefix=/usr
          make -j$(nproc)
          make install
          cd ..

          # Build librtlsdr (static, no udev)
          git clone https://github.com/steve-m/librtlsdr.git
          cd librtlsdr
          ./autogen.sh
          CFLAGS="-fPIC" ./configure --enable-static --disable-shared --disable-udev --prefix=/usr
          make -j$(nproc)
          make install
          cd ..

          # Build rtl_433 statically
          mkdir -p rtl_433/build
          cd rtl_433/build
          cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_SOAPYSDR=OFF -DENABLE_ADEUNIS=OFF -DENABLE_MQTT=OFF -DENABLE_HTTP=OFF -DENABLE_SYSLOG=OFF -DBUILD_TESTING=OFF -DENABLE_ANALYZER=OFF -DENABLE_INSTALL_UDEV_RULE=OFF -DENABLE_MANPAGES=OFF -DENABLE_SDL=OFF -DENABLE_HIDRAW=OFF -DCMAKE_EXE_LINKER_FLAGS="-static" ..
          make -j$(nproc)
          cd ../..

    - name: Upload static rtl_433 binary
      uses: actions/upload-artifact@v4
      with:
        name: rtl_433_linux_static
        path: rtl_433/build/src/rtl_433
